name: Build with nix

on: [push, pull_request, workflow_dispatch]
permissions:
    actions: write
jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - uses: wimpysworld/nothing-but-nix@main
              with:
                  nix-permission-edict: true
                  hatchet-protocol: 'cleave'

            - name: Install Nix
              uses: nixbuild/nix-quick-install-action@v34
              with:
                  nix_version: 2.31.2
                  nix_conf: |
                      build-dir = /nix/var/nix/builds
                      keep-env-derivations = true
                      keep-outputs = true

            - name: Cache nix store
              uses: nix-community/cache-nix-action@v6
              with:
                  primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
                  restore-prefixes-first-match: nix-${{ runner.os }}-
                  gc-max-store-size-linux: 5G
                  purge: false

            - name: Build with nix
              id: build
              run: |
                  OUT_PATHS="$(nix build --print-out-paths)"
                  echo "OUT_PATHS=${OUT_PATHS}" >> $GITHUB_OUTPUT

            - uses: cachix/cachix-action@v15
              with:
                name: polyfrost
                authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
                signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
                pathsToPush: "${{ steps.build.outputs.OUT_PATHS }}"
